{"version":3,"sources":["components/game/form/CustomForm.js","components/stats/stats.js","components/game/game.js","components/header/header.js","App.js","serviceWorker.js","index.js"],"names":["CustomForm","state","number","answer","status","hintMessage","hintMessageClass","onSend","e","self","preventDefault","length","fetch","method","mode","body","JSON","stringify","headers","then","response","json","result","setState","props","onChangeCallback","onChange","validate","target","value","name","onInput","textContent","onRemove","slice","match","Set","split","size","className","Form","Group","controlId","Label","Control","this","type","placeholder","Text","map","el","Button","onClick","variant","React","Component","Stats","stats","loadAndRenderStats","dataUrl","data","stat","user","attemptsCount","nextProps","rows","entity","i","isVisibleLogin","undefined","login","Table","striped","bordered","hover","Game","statuses","game","gameOver","welcomeMessage","onStart","checkGameStatus","formCallback","Alert","gameState","Header","update","getAttribute","Fragment","Navbar","bg","Brand","href","Nav","Link","data-page-type","Collapse","username","App","url","authorities","pageType","updateState","fieldName","load","callback","parse","principal","catch","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+XA4GeA,G,iNAtGbC,MAAQ,CACNC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,YAAa,yKACbC,iBAAkB,U,EAGpBC,OAAS,SAACC,GACR,IAAIC,EAAI,eAERD,EAAEE,iBAE6B,GAA5B,EAAKT,MAAMC,OAAOS,OAQrBC,MAAM,6BAA8B,CAClCC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CAACd,OAAQ,EAAKF,MAAMC,SACzCgB,QAAS,CACP,eAAgB,sBAGnBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLb,EAAKc,SAAS,CACZpB,OAAQmB,EAAOnB,OACfC,OAAQkB,EAAOlB,SACd,WACDK,EAAKe,MAAMC,iBAAiB,EAAKxB,aArBnC,EAAKsB,SAAS,CACZlB,YAAa,kGACbC,iBAAkB,W,EAwBxBoB,SAAW,SAAClB,GACN,EAAKmB,SAASnB,EAAEoB,OAAOC,QAI3B,EAAKN,SAAL,eAAiBf,EAAEoB,OAAOE,KAAQtB,EAAEoB,OAAOC,S,EAG7CE,QAAU,SAACvB,GACT,IAAIqB,EAAQ,EAAK5B,MAAMC,OAASM,EAAEoB,OAAOI,YACrC,EAAKL,SAASE,IAIlB,EAAKN,SAAS,CAAErB,OAAS2B,K,EAG3BI,SAAW,SAACzB,GACV,EAAKe,SAAS,CAAErB,OAAS,EAAKD,MAAMC,OAAOgC,MAAM,GAAI,M,EAGvDP,SAAW,SAACE,GAMV,OALA,EAAKN,SAAS,CACZlB,YAAa,yKACbC,iBAAkB,WAGbuB,EAAMlB,QAAU,GACfkB,EAAMM,MAAM,UACX,IAAIC,IAAIP,EAAMQ,MAAM,KAAKC,MAAQT,EAAMlB,Q,wEAGzC,IAAD,OACN,OACE,yBAAK4B,UAAU,eACb,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpB,kBAACF,EAAA,EAAKG,MAAN,qFACA,kBAACH,EAAA,EAAKI,QAAN,CAAcf,MAAOgB,KAAK5C,MAAMC,OAAQ4C,KAAK,OAAOhB,KAAK,SAASiB,YAAY,yDAAiBrB,SAAUmB,KAAKnB,WAC9G,kBAACc,EAAA,EAAKQ,KAAN,CAAWT,UAAW,cAAgBM,KAAK5C,MAAMK,kBAC9CuC,KAAK5C,MAAMI,cAGhB,yBAAKkC,UAAU,kCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGU,KAAI,SAACC,GAC1B,OAAO,kBAACC,EAAA,EAAD,CAAQZ,UAAU,YAAYa,QAAS,EAAKrB,SAAUmB,MAE/D,kBAACC,EAAA,EAAD,CAAQZ,UAAU,YAAYa,QAASP,KAAKZ,UAA5C,QAIN,kBAACkB,EAAA,EAAD,CAAQE,QAAQ,UAAUd,UAAU,aAAaO,KAAK,SAASM,QAASP,KAAKtC,QAA7E,gE,GA9Fe+C,IAAMC,Y,QCoFhBC,E,2MApFbvD,MAAQ,CACNwD,MAAO,I,EAWTC,mBAAqB,WACnB9C,MAAM,EAAKY,MAAMmC,QAAS,CACxB9C,OAAQ,MACRC,KAAM,SAEPK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAAyC,GACJ,IAAIH,EAAQG,EAAKX,KAAI,SAACY,GACpB,MAAO,CAAC,KAAQA,EAAKC,KAAM,cAAiBD,EAAKE,kBAEnD,EAAKxC,SAAS,CAACkC,MAAOA,Q,mFAjBxBZ,KAAKa,uB,gDAGmBM,GACxBnB,KAAKa,uB,+BAkBE,IAAD,OAEFO,EADYpB,KAAK5C,MAAfwD,MACWR,KAAI,SAACiB,EAAQC,GAC5B,OACE,8BAEmC,IAA9B,EAAK3C,MAAM4C,qBACkBC,IAA9B,EAAK7C,MAAM4C,iBACX,oCACE,4BAAKD,EAAI,GACT,4BAAKD,EAAOJ,KAAKQ,QAGrB,4BAAKJ,EAAOH,mBAmBlB,OAfkB,GAAfE,EAAKtD,SACNsD,EACE,8BAEmC,IAA9BpB,KAAKrB,MAAM4C,qBACkBC,IAA9BxB,KAAKrB,MAAM4C,iBACX,oCACE,6BACA,sEAGJ,uEAKJ,yBAAK7B,UAAU,SACb,kBAACgC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,8BAEmC,IAA9B7B,KAAKrB,MAAM4C,qBACkBC,IAA9BxB,KAAKrB,MAAM4C,iBACX,oCACE,iCACA,+DAGJ,yIAGJ,+BACGH,S,GA7EOX,IAAMC,WC6FXoB,G,iNAzFbC,SAAW,CACTC,KAAM,OACNC,SAAU,a,EAGZ7E,MAAQ,CACNE,OAAQ,GACRC,OAAQ,EAAKwE,SAASE,SACtBC,eAAgB,yJAChB7E,OAAQ,I,EAMV8E,QAAU,SAACxE,GACD,eAERI,MAAM,8BAA+B,CACnCC,OAAQ,MACRC,KAAM,SAEPK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKC,SAAS,CAAEnB,OAAQkB,EAAOlB,a,EAInC6E,gBAAkB,WACb,EAAKhF,MAAMG,QAAU,EAAKwE,SAASE,UACpC,EAAKvD,SAAS,CACZwD,eAAe,+JAAD,OAAoC,EAAK9E,MAAMC,OAA/C,+DACb,WACD,EAAKqB,SAAS,CAACpB,OAAQ,S,EAK7B+E,aAAe,SAACtB,GACd,EAAKrC,SAAS,CACZpB,OAAQyD,EAAKzD,OACbC,OAAQwD,EAAKxD,OACbF,OAAQ0D,EAAK1D,SAEf,WACE,EAAK+E,sB,EAITvD,SAAW,SAAClB,GACV,EAAKe,SAAL,eAAiBf,EAAEoB,OAAOE,KAAQtB,EAAEoB,OAAOC,S,qHAI3C,OACE,yBAAKU,UAAU,uBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,gCAEXM,KAAK5C,MAAMG,SAAWyC,KAAK+B,SAASC,MACpC,oCACE,kBAAC,EAAD,CAAYpD,iBAAoBoB,KAAKqC,eACd,KAAtBrC,KAAK5C,MAAME,QAAiB,kBAACgF,EAAA,EAAD,CAAO9B,QAAQ,UAAUd,UAAU,eAC7DM,KAAK5C,MAAME,SAKhB0C,KAAK5C,MAAMG,SAAWyC,KAAK+B,SAASE,UACpC,oCACE,0BAAMvC,UAAU,4BAA4BM,KAAK5C,MAAM8E,gBACvD,kBAAC5B,EAAA,EAAD,CAAQC,QAASP,KAAKmC,SAAtB,0CAIN,yBAAKzC,UAAU,yBACb,0BAAMA,UAAU,gBAAhB,sFACA,kBAAC,EAAD,CACE6C,UAAWvC,KAAK5C,MAAMG,OACtBgE,eAAe,QACfT,QAAU,2C,GAjFLL,IAAMC,Y,gBC6BV8B,G,iNANXC,OAAS,SAAC9E,GACNA,EAAEE,iBACF,EAAKc,MAAM8D,OAAO,WAAY9E,EAAEoB,OAAO2D,aAAa,oB,wEAtBpD,OACI,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,SACP,kBAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,SAAnB,2DACA,kBAACC,EAAA,EAAD,CAAKtD,UAAU,WACX,kBAACsD,EAAA,EAAIC,KAAL,CAAUC,iBAAe,OAAO3C,QAASP,KAAKyC,QAA9C,4BACA,kBAACO,EAAA,EAAIC,KAAL,CAAUC,iBAAe,QAAQ3C,QAASP,KAAKyC,QAA/C,+CAEJ,kBAACG,EAAA,EAAD,MACA,kBAACA,EAAA,EAAOO,SAAR,CAAiBzD,UAAU,uBACvB,kBAACkD,EAAA,EAAOzC,KAAR,KACI,uBAAG4C,KAAK,KAAK/C,KAAKrB,MAAMyE,WAE5B,kBAAC9C,EAAA,EAAD,CAAQE,QAAQ,eAAed,UAAU,OAAOqD,KAAK,WAArD,yC,GAhBHtC,IAAMC,YCsDZ2C,E,2MAtDbjG,MAAQ,CACNkG,IAAK,GACLF,SAAU,GACVG,YAAa,GACbC,SAAU,Q,EAOZC,YAAc,SAACC,EAAW1E,GACxB,EAAKN,SAAL,eAAiBgF,EAAY1E,K,EAe/B2E,KAAO,SAACL,EAAKM,GACX,IAAIhG,EAAI,eAERG,MAAMuF,EAAK,CACTtF,OAAQ,OACRC,KAAM,SAEPK,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAAUG,GACd,IAAIwC,EAAO9C,KAAK0F,MAAMpF,GACtBb,EAAKc,SAAS,CACZ0E,SAAUnC,EAAK6C,UAAUV,SACzBG,YAAatC,EAAK6C,UAAUP,cAC3B,WACGK,GACFA,UAILG,OAAM,SAACpG,Q,mFAxCRqC,KAAK2D,KAAK,gB,+BAQM3D,KAAK5C,MAAbkG,IAER,OACE,yBAAK5D,UAAU,iBACb,kBAAC,EAAD,CAAQ+C,OAAQzC,KAAKyD,YAAaL,SAAUpD,KAAK5C,MAAMgG,WAC9B,SAAxBpD,KAAK5C,MAAMoG,UAAuB,kBAAC,EAAD,MACV,UAAxBxD,KAAK5C,MAAMoG,UAAwB,kBAAC,EAAD,CAAO1C,QAAU,0C,GAvB3CL,IAAMC,WCMJsD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS7E,MACvB,2DCZN8E,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpG,MAAK,SAAAqG,GACjCA,EAAaC,kB","file":"static/js/main.36015a02.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport './form.scss';\r\n\r\nclass CustomForm extends React.Component {\r\n  state = {\r\n    number: '',\r\n    answer: '',\r\n    status: '',\r\n    hintMessage: 'Подсказка: цифры не повторяются',\r\n    hintMessageClass: 'normal'\r\n  }\r\n\r\n  onSend = (e) => {\r\n    let self = this;\r\n\r\n    e.preventDefault();\r\n\r\n    if(this.state.number.length != 4){\r\n      this.setState({\r\n        hintMessage: 'Должно быть 4 цифры!',\r\n        hintMessageClass: 'error'\r\n      });\r\n      return;\r\n    }\r\n\r\n    fetch('http://localhost:8080/step', {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      body: JSON.stringify({answer: this.state.number }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n    .then((response) => response.json())\r\n    .then((result) => {\r\n      self.setState({\r\n        answer: result.answer,\r\n        status: result.status\r\n      }, () =>{\r\n        self.props.onChangeCallback(this.state);\r\n      });\r\n    });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    if(!this.validate(e.target.value)){\r\n      return;\r\n    }\r\n\r\n    this.setState({ [e.target.name] : e.target.value })\r\n  }\r\n\r\n  onInput = (e) => {\r\n    let value = this.state.number + e.target.textContent;\r\n    if(!this.validate(value)){\r\n      return;\r\n    }\r\n\r\n    this.setState({ number : value })\r\n  }\r\n\r\n  onRemove = (e) => {\r\n    this.setState({ number : this.state.number.slice(0, -1) });\r\n  }\r\n\r\n  validate = (value) => {\r\n    this.setState({\r\n      hintMessage: 'Подсказка: цифры не повторяются',\r\n      hintMessageClass: 'normal'\r\n    });\r\n\r\n    return value.length <= 4 &&\r\n            value.match(/^\\d*$/) &&\r\n            (new Set(value.split('')).size == value.length);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"custom-form\">\r\n        <Form>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Введите 4 цифры:</Form.Label>\r\n            <Form.Control value={this.state.number} type=\"text\" name=\"number\" placeholder=\"Например: 4958\" onChange={this.onChange} />\r\n            <Form.Text className={\"text-muted \" + this.state.hintMessageClass}>\r\n              {this.state.hintMessage}\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <div className=\"row justify-content-start mt-3\">\r\n            <div className=\"col\">\r\n              <div className=\"keyboard\">\r\n                {[1,2,3,4,5,6,7,8,9,0].map((el) =>{\r\n                  return <Button className=\"mr-3 mb-3\" onClick={this.onInput}>{el}</Button>\r\n                })}\r\n                <Button className=\"mr-3 mb-3\" onClick={this.onRemove}>C</Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Button variant=\"primary\" className=\"mt-3 w-100\" type=\"submit\" onClick={this.onSend}>\r\n            Отправить\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomForm;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nclass Stats extends React.Component {\r\n  state = {\r\n    stats: []\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.loadAndRenderStats();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    this.loadAndRenderStats();\r\n  }\r\n\r\n  loadAndRenderStats = () => {\r\n    fetch(this.props.dataUrl, {\r\n      method: 'GET',\r\n      mode: 'cors'\r\n    })\r\n    .then((response) => response.json())\r\n    .then(data => {\r\n      let stats = data.map((stat) => {\r\n        return {'user': stat.user, 'attemptsCount': stat.attemptsCount};\r\n      });\r\n      this.setState({stats: stats});\r\n    });\r\n\r\n  }\r\n\r\n  render(){\r\n    let { stats } = this.state;\r\n    let rows = stats.map((entity, i) => {\r\n      return (\r\n        <tr>\r\n          {\r\n            (this.props.isVisibleLogin === true ||\r\n            this.props.isVisibleLogin === undefined) &&\r\n            <>\r\n              <td>{i + 1}</td>\r\n              <td>{entity.user.login}</td>\r\n            </>\r\n          }\r\n          <td>{entity.attemptsCount}</td>\r\n        </tr>);\r\n    });\r\n\r\n    if(rows.length == 0){\r\n      rows = (\r\n        <tr>\r\n          {\r\n            (this.props.isVisibleLogin === true ||\r\n            this.props.isVisibleLogin === undefined) &&\r\n            <>\r\n              <td></td>\r\n              <td>Нет игр</td>\r\n            </>\r\n          }\r\n          <td>Нет игр</td>\r\n        </tr>);\r\n    }\r\n\r\n    return(\r\n      <div className=\"stats\">\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              {\r\n                (this.props.isVisibleLogin === true ||\r\n                this.props.isVisibleLogin === undefined) &&\r\n                <>\r\n                  <th>#</th>\r\n                  <th>Логин</th>\r\n                </>\r\n              }\r\n              <th>Количество попыток</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stats;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport CustomForm from './form/CustomForm.js';\r\nimport Stats from '../stats/stats.js';\r\nimport './game.scss';\r\n\r\nclass Game extends React.Component {\r\n  statuses = {\r\n    game: 'GAME',\r\n    gameOver: 'GAME_OVER'\r\n  }\r\n\r\n  state = {\r\n    answer: '',\r\n    status: this.statuses.gameOver,\r\n    welcomeMessage: 'Чтобы играть, нажмите \"Начать\"',\r\n    number: ''\r\n  }\r\n\r\n  componentDidMount(){\r\n  }\r\n\r\n  onStart = (e) => {\r\n    let self = this;\r\n\r\n    fetch('http://localhost:8080/start', {\r\n      method: 'GET',\r\n      mode: 'cors'\r\n    })\r\n    .then((response) => response.json())\r\n    .then((result) => {\r\n      this.setState({ status: result.status});\r\n    });\r\n  }\r\n\r\n  checkGameStatus = () => {\r\n    if(this.state.status == this.statuses.gameOver){\r\n      this.setState({\r\n        welcomeMessage: `Вы победили! Загаданное число: ${this.state.number}! Продолжим?`\r\n      }, () => {\r\n        this.setState({answer: ''});\r\n      });\r\n    }\r\n  }\r\n\r\n  formCallback = (data) => {\r\n    this.setState({\r\n      answer: data.answer,\r\n      status: data.status,\r\n      number: data.number\r\n    },\r\n    () => {\r\n      this.checkGameStatus();\r\n    });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name] : e.target.value })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"game container mt-5\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-md-6 mb-5 content\">\r\n            {\r\n              this.state.status === this.statuses.game &&\r\n              <>\r\n                <CustomForm onChangeCallback = {this.formCallback}/>\r\n                {this.state.answer !== \"\" && <Alert variant='primary' className=\"answer mt-3\">\r\n                  {this.state.answer}\r\n                </Alert>}\r\n              </>\r\n            }\r\n            {\r\n              this.state.status === this.statuses.gameOver &&\r\n              <>\r\n                <span className=\"text-center d-block mb-3\">{this.state.welcomeMessage}</span>\r\n                <Button onClick={this.onStart} >Начать</Button>\r\n              </>\r\n            }\r\n          </div>\r\n          <div className=\"col-12 col-md-6 stats\">\r\n            <span className=\"mb-2 d-block\">Последние 3 игры:</span>\r\n            <Stats\r\n              gameState={this.state.status}\r\n              isVisibleLogin=\"false\"\r\n              dataUrl = \"http://localhost:8080/userStats\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './header.scss';\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar bg=\"light\">\r\n                    <Navbar.Brand href=\"#home\">БЫК-КОРОВА</Navbar.Brand>\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link data-page-type=\"Game\" onClick={this.update}>Игра</Nav.Link>\r\n                        <Nav.Link data-page-type=\"Stats\" onClick={this.update}>Рекорды</Nav.Link>\r\n                    </Nav>\r\n                    <Navbar/>\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Navbar.Text>\r\n                            <a href=\"#\">{this.props.username}</a>\r\n                        </Navbar.Text>\r\n                        <Button variant=\"outline-info\" className=\"ml-2\" href='/logout'>Выйти</Button>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    update = (e) => {\r\n        e.preventDefault();\r\n        this.props.update(\"pageType\", e.target.getAttribute('data-page-type'));\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport './App.css';\nimport Game from './components/game/game';\nimport Stats from './components/stats/stats';\nimport Header from './components/header/header';\n\nclass App extends React.Component {\n  state = {\n    url: '',\n    username: '',\n    authorities: '',\n    pageType: 'Game'\n  }\n\n  componentDidMount() {\n    this.load('/principal');\n  }\n\n  updateState = (fieldName, value) => {\n    this.setState({ [fieldName]: value })\n  }\n\n  render(){\n    const { url } = this.state;\n\n    return (\n      <div className=\"app-container\">\n        <Header update={this.updateState} username={this.state.username}/>\n        {this.state.pageType === \"Game\" && <Game/>}\n        {this.state.pageType === \"Stats\" && <Stats dataUrl = \"http://localhost:8080/usersStats\"/>}\n      </div>\n    );\n  }\n\n  load = (url, callback) => {\n    let self = this;\n\n    fetch(url, {\n      method: 'POST',\n      mode: 'cors',\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then(function (result) {\n      let user = JSON.parse(result);\n      self.setState({\n        username: user.principal.username,\n        authorities: user.principal.authorities\n      }, () => {\n        if (callback) {\n          callback();\n        }\n      });\n    })\n    .catch((e) => {\n\n    })\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}